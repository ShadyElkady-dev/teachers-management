import React, { useState } from 'react';
import { useAuth } from '../../context/AuthContext';
import Modal from './Modal';
import { formatDateTime } from '../../utils/helpers';

const UserProfile = () => {
  const { user, logout, USER_ROLES } = useAuth();
  const [showProfileModal, setShowProfileModal] = useState(false);
  const [showLogoutConfirm, setShowLogoutConfirm] = useState(false);

  const handleLogout = () => {
    logout();
    setShowLogoutConfirm(false);
  };

  const getUserRoleLabel = (role) => {
    switch (role) {
      case USER_ROLES.ADMIN:
        return 'ูุฏูุฑ ุงููุธุงู';
      case USER_ROLES.SECRETARY:
        return 'ุณูุฑุชุงุฑูุฉ';
      default:
        return 'ูุณุชุฎุฏู';
    }
  };

  const getUserRoleIcon = (role) => {
    switch (role) {
      case USER_ROLES.ADMIN:
        return '๐';
      case USER_ROLES.SECRETARY:
        return '๐';
      default:
        return '๐ค';
    }
  };

  const getRoleColor = (role) => {
    switch (role) {
      case USER_ROLES.ADMIN:
        return 'bg-purple-100 text-purple-800 border-purple-200';
      case USER_ROLES.SECRETARY:
        return 'bg-blue-100 text-blue-800 border-blue-200';
      default:
        return 'bg-gray-100 text-gray-800 border-gray-200';
    }
  };

  return (
    <>
      {/* ุฒุฑ ุงูููู ุงูุดุฎุตู */}
      <div className="relative">
        <button
          onClick={() => setShowProfileModal(true)}
          className="flex items-center gap-2 p-2 text-gray-600 hover:text-gray-800 hover:bg-gray-100 rounded-lg transition-colors"
          title="ุงูููู ุงูุดุฎุตู"
        >
          <div className="w-8 h-8 bg-gradient-to-br from-blue-500 to-blue-600 rounded-full flex items-center justify-center">
            <span className="text-white text-sm font-bold">
              {user?.name?.charAt(0) || '๐ค'}
            </span>
          </div>
          <div className="hidden sm:block text-right">
            <div className="text-sm font-medium">{user?.name}</div>
            <div className="text-xs text-gray-500">{getUserRoleLabel(user?.role)}</div>
          </div>
        </button>
      </div>

      {/* ูุงูุฐุฉ ุงูููู ุงูุดุฎุตู */}
      <Modal
        isOpen={showProfileModal}
        onClose={() => setShowProfileModal(false)}
        title="ุงูููู ุงูุดุฎุตู"
        size="medium"
      >
        <div className="space-y-6">
          
          {/* ูุนูููุงุช ุงููุณุชุฎุฏู ุงูุฃุณุงุณูุฉ */}
          <div className="text-center">
            <div className="w-20 h-20 bg-gradient-to-br from-blue-500 to-blue-600 rounded-full flex items-center justify-center mx-auto mb-4 shadow-lg">
              <span className="text-white text-2xl font-bold">
                {user?.name?.charAt(0) || '๐ค'}
              </span>
            </div>
            <h2 className="text-xl font-semibold text-gray-900">{user?.name}</h2>
            <p className="text-gray-600">{user?.email}</p>
          </div>

          {/* ููุน ุงูุญุณุงุจ */}
          <div className="bg-gray-50 rounded-lg p-4">
            <div className="flex items-center justify-center gap-3">
              <span className="text-2xl">{getUserRoleIcon(user?.role)}</span>
              <div className={`px-4 py-2 rounded-full border ${getRoleColor(user?.role)}`}>
                <span className="font-medium">{getUserRoleLabel(user?.role)}</span>
              </div>
            </div>
          </div>

          {/* ุชูุงุตูู ุงูุญุณุงุจ */}
          <div className="space-y-4">
            <div className="grid grid-cols-2 gap-4 text-sm">
              <div>
                <span className="text-gray-500">ุงุณู ุงููุณุชุฎุฏู:</span>
                <div className="font-medium">{user?.username}</div>
              </div>
              <div>
                <span className="text-gray-500">ูุนุฑู ุงููุณุชุฎุฏู:</span>
                <div className="font-medium font-mono text-xs">{user?.id}</div>
              </div>
              <div className="col-span-2">
                <span className="text-gray-500">ููุช ุชุณุฌูู ุงูุฏุฎูู:</span>
                <div className="font-medium">
                  {user?.loginTime ? formatDateTime(user.loginTime) : 'ุบูุฑ ูุญุฏุฏ'}
                </div>
              </div>
            </div>
          </div>

          {/* ุฃุฒุฑุงุฑ ุงูุฅุฌุฑุงุกุงุช */}
          <div className="flex gap-3 pt-4 border-t border-gray-200">
            <button
              onClick={() => setShowProfileModal(false)}
              className="flex-1 btn btn-secondary"
            >
              ุฅุบูุงู
            </button>
            <button
              onClick={() => {
                setShowProfileModal(false);
                setShowLogoutConfirm(true);
              }}
              className="flex-1 btn btn-error"
            >
              <span className="ml-2">๐ช</span>
              ุชุณุฌูู ุงูุฎุฑูุฌ
            </button>
          </div>
        </div>
      </Modal>

      {/* ูุงูุฐุฉ ุชุฃููุฏ ุชุณุฌูู ุงูุฎุฑูุฌ */}
      <Modal
        isOpen={showLogoutConfirm}
        onClose={() => setShowLogoutConfirm(false)}
        title="ุชุฃููุฏ ุชุณุฌูู ุงูุฎุฑูุฌ"
        size="small"
      >
        <div className="text-center py-4">
          <div className="text-4xl mb-4">๐ช</div>
          <h3 className="text-lg font-semibold text-gray-900 mb-2">
            ูู ุฃูุช ูุชุฃูุฏ ูู ุชุณุฌูู ุงูุฎุฑูุฌุ
          </h3>
          <p className="text-gray-600 mb-6">
            ุณูุชู ุฅููุงุก ุฌูุณุฉ ุงูุนูู ุงูุญุงููุฉ ูุณุชุญุชุงุฌ ูุชุณุฌูู ุงูุฏุฎูู ูุฑุฉ ุฃุฎุฑู
          </p>
          
          <div className="flex gap-3">
            <button
              onClick={() => setShowLogoutConfirm(false)}
              className="flex-1 btn btn-secondary"
            >
              ุฅูุบุงุก
            </button>
            <button
              onClick={handleLogout}
              className="flex-1 btn btn-error"
            >
              ุชุณุฌูู ุงูุฎุฑูุฌ
            </button>
          </div>
        </div>
      </Modal>
    </>
  );
};

// ุฏุงูุฉ ูุณุงุนุฏุฉ ูุนุฑุถ ุชุณููุงุช ุงูุตูุงุญูุงุช
const getPermissionLabel = (permission) => {
  const permissionLabels = {
    'view_teachers': 'ุนุฑุถ ุงููุฏุฑุณูู',
    'add_teacher': 'ุฅุถุงูุฉ ูุฏุฑุณ',
    'edit_teacher': 'ุชุนุฏูู ุงููุฏุฑุณ',
    'delete_teacher': 'ุญุฐู ุงููุฏุฑุณ',
    'view_operations': 'ุนุฑุถ ุงูุนูููุงุช',
    'add_operation': 'ุฅุถุงูุฉ ุนูููุฉ',
    'edit_operation': 'ุชุนุฏูู ุงูุนูููุฉ',
    'delete_operation': 'ุญุฐู ุงูุนูููุฉ',
    'view_operation_prices': 'ุนุฑุถ ุฃุณุนุงุฑ ุงูุนูููุงุช',
    'view_payments': 'ุนุฑุถ ุงููุฏููุนุงุช',
    'add_payment': 'ุฅุถุงูุฉ ุฏูุนุฉ',
    'edit_payment': 'ุชุนุฏูู ุงูุฏูุนุฉ',
    'delete_payment': 'ุญุฐู ุงูุฏูุนุฉ',
    'view_expenses': 'ุนุฑุถ ุงููุตุฑููุงุช',
    'add_expense': 'ุฅุถุงูุฉ ูุตุฑูู',
    'edit_expense': 'ุชุนุฏูู ุงููุตุฑูู',
    'delete_expense': 'ุญุฐู ุงููุตุฑูู',
    'view_reports': 'ุนุฑุถ ุงูุชูุงุฑูุฑ',
    'view_financial_data': 'ุนุฑุถ ุงูุจูุงูุงุช ุงููุงููุฉ',
    'export_data': 'ุชุตุฏูุฑ ุงูุจูุงูุงุช',
    'manage_users': 'ุฅุฏุงุฑุฉ ุงููุณุชุฎุฏููู',
    'view_system_settings': 'ุนุฑุถ ุฅุนุฏุงุฏุงุช ุงููุธุงู'
  };

  return permissionLabels[permission] || permission;
};

export default UserProfile;